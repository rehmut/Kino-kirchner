
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  emailVerified: 'emailVerified',
  image: 'image',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state',
  oauth_token_secret: 'oauth_token_secret',
  oauth_token: 'oauth_token'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  sessionToken: 'sessionToken',
  userId: 'userId',
  expires: 'expires'
};

exports.Prisma.VerificationTokenScalarFieldEnum = {
  identifier: 'identifier',
  token: 'token',
  expires: 'expires'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  slug: 'slug',
  title: 'title',
  description: 'description',
  scheduledAt: 'scheduledAt',
  doorTime: 'doorTime',
  location: 'location',
  heroImage: 'heroImage',
  isPublished: 'isPublished',
  isArchived: 'isArchived',
  createdById: 'createdById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FilmScalarFieldEnum = {
  id: 'id',
  title: 'title',
  letterboxdUrl: 'letterboxdUrl',
  synopsis: 'synopsis',
  runtimeMinutes: 'runtimeMinutes',
  releaseYear: 'releaseYear',
  posterImage: 'posterImage',
  director: 'director',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EventFilmScalarFieldEnum = {
  id: 'id',
  eventId: 'eventId',
  filmId: 'filmId',
  slotOrder: 'slotOrder',
  note: 'note',
  createdAt: 'createdAt'
};

exports.Prisma.InvitationScalarFieldEnum = {
  id: 'id',
  eventId: 'eventId',
  userId: 'userId',
  inviteeName: 'inviteeName',
  email: 'email',
  status: 'status',
  rsvpAt: 'rsvpAt',
  note: 'note',
  token: 'token',
  plusOnes: 'plusOnes',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FeatureRequestScalarFieldEnum = {
  id: 'id',
  eventId: 'eventId',
  filmId: 'filmId',
  submittedById: 'submittedById',
  submittedEmail: 'submittedEmail',
  submitterName: 'submitterName',
  filmTitle: 'filmTitle',
  letterboxdUrl: 'letterboxdUrl',
  notes: 'notes',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  ADMIN: 'ADMIN',
  GUEST: 'GUEST'
};

exports.InvitationStatus = exports.$Enums.InvitationStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  DECLINED: 'DECLINED',
  MAYBE: 'MAYBE'
};

exports.FeatureRequestStatus = exports.$Enums.FeatureRequestStatus = {
  PENDING: 'PENDING',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  ARCHIVED: 'ARCHIVED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Account: 'Account',
  Session: 'Session',
  VerificationToken: 'VerificationToken',
  Event: 'Event',
  Film: 'Film',
  EventFilm: 'EventFilm',
  Invitation: 'Invitation',
  FeatureRequest: 'FeatureRequest'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Lenovo\\CinemaNights\\webapp\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Lenovo\\CinemaNights\\webapp\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Role {\n  ADMIN\n  GUEST\n}\n\nenum InvitationStatus {\n  PENDING\n  ACCEPTED\n  DECLINED\n  MAYBE\n}\n\nenum FeatureRequestStatus {\n  PENDING\n  APPROVED\n  REJECTED\n  ARCHIVED\n}\n\nmodel User {\n  id              String           @id @default(cuid())\n  name            String?\n  email           String?          @unique\n  emailVerified   DateTime?\n  image           String?\n  role            Role             @default(GUEST)\n  invitations     Invitation[]\n  sessions        Session[]\n  accounts        Account[]\n  featureRequests FeatureRequest[] @relation(\"FeatureRequestSubmittedBy\")\n  createdEvents   Event[]          @relation(\"EventCreatedBy\")\n  createdAt       DateTime         @default(now())\n  updatedAt       DateTime         @updatedAt\n}\n\nmodel Account {\n  id                 Int     @id @default(autoincrement())\n  userId             String\n  type               String\n  provider           String\n  providerAccountId  String\n  refresh_token      String? @map(\"refresh_token\")\n  access_token       String? @map(\"access_token\")\n  expires_at         Int?    @map(\"expires_at\")\n  token_type         String? @map(\"token_type\")\n  scope              String?\n  id_token           String? @map(\"id_token\")\n  session_state      String? @map(\"session_state\")\n  oauth_token_secret String? @map(\"oauth_token_secret\")\n  oauth_token        String? @map(\"oauth_token\")\n  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerAccountId])\n}\n\nmodel Session {\n  id           String   @id @default(cuid())\n  sessionToken String   @unique\n  userId       String\n  expires      DateTime\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel VerificationToken {\n  identifier String\n  token      String   @unique\n  expires    DateTime\n\n  @@unique([identifier, token])\n}\n\nmodel Event {\n  id              String           @id @default(cuid())\n  slug            String           @unique\n  title           String\n  description     String?\n  scheduledAt     DateTime\n  doorTime        DateTime?\n  location        String?\n  heroImage       String?\n  isPublished     Boolean          @default(false)\n  isArchived      Boolean          @default(false)\n  createdById     String\n  createdBy       User             @relation(\"EventCreatedBy\", fields: [createdById], references: [id])\n  invitations     Invitation[]\n  eventFilms      EventFilm[]\n  featureRequests FeatureRequest[]\n  createdAt       DateTime         @default(now())\n  updatedAt       DateTime         @updatedAt\n\n  @@index([scheduledAt])\n  @@index([isPublished, scheduledAt])\n}\n\nmodel Film {\n  id              String           @id @default(cuid())\n  title           String\n  letterboxdUrl   String           @unique\n  synopsis        String?\n  runtimeMinutes  Int?\n  releaseYear     Int?\n  posterImage     String?\n  director        String?\n  eventFilms      EventFilm[]\n  featureRequests FeatureRequest[]\n  createdAt       DateTime         @default(now())\n  updatedAt       DateTime         @updatedAt\n}\n\nmodel EventFilm {\n  id        String   @id @default(cuid())\n  eventId   String\n  filmId    String\n  slotOrder Int      @default(0)\n  note      String?\n  event     Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)\n  film      Film     @relation(fields: [filmId], references: [id], onDelete: Cascade)\n  createdAt DateTime @default(now())\n\n  @@unique([eventId, filmId])\n  @@index([eventId, slotOrder])\n}\n\nmodel Invitation {\n  id          String           @id @default(cuid())\n  eventId     String\n  userId      String?\n  inviteeName String?\n  email       String\n  status      InvitationStatus @default(PENDING)\n  rsvpAt      DateTime?\n  note        String?\n  token       String           @unique\n  plusOnes    Int              @default(0)\n  event       Event            @relation(fields: [eventId], references: [id], onDelete: Cascade)\n  user        User?            @relation(fields: [userId], references: [id], onDelete: SetNull)\n  createdAt   DateTime         @default(now())\n  updatedAt   DateTime         @updatedAt\n\n  @@unique([eventId, email])\n  @@index([eventId, status])\n}\n\nmodel FeatureRequest {\n  id             String               @id @default(cuid())\n  eventId        String?\n  filmId         String?\n  submittedById  String?\n  submittedEmail String\n  submitterName  String?\n  filmTitle      String\n  letterboxdUrl  String?\n  notes          String?\n  status         FeatureRequestStatus @default(PENDING)\n  event          Event?               @relation(fields: [eventId], references: [id], onDelete: SetNull)\n  film           Film?                @relation(fields: [filmId], references: [id], onDelete: SetNull)\n  submittedBy    User?                @relation(\"FeatureRequestSubmittedBy\", fields: [submittedById], references: [id], onDelete: SetNull)\n  createdAt      DateTime             @default(now())\n  updatedAt      DateTime             @updatedAt\n\n  @@index([status])\n  @@index([letterboxdUrl])\n}\n",
  "inlineSchemaHash": "20b8eeee969a99647717facb9390924f4496dc8137b3dc7c482b5c0a81a68826",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"InvitationToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"featureRequests\",\"kind\":\"object\",\"type\":\"FeatureRequest\",\"relationName\":\"FeatureRequestSubmittedBy\"},{\"name\":\"createdEvents\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventCreatedBy\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refresh_token\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"refresh_token\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"access_token\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"expires_at\"},{\"name\":\"token_type\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"token_type\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_token\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"id_token\"},{\"name\":\"session_state\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"session_state\"},{\"name\":\"oauth_token_secret\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"oauth_token_secret\"},{\"name\":\"oauth_token\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"oauth_token\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":null},\"VerificationToken\":{\"fields\":[{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Event\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scheduledAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"doorTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"heroImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isPublished\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isArchived\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EventCreatedBy\"},{\"name\":\"invitations\",\"kind\":\"object\",\"type\":\"Invitation\",\"relationName\":\"EventToInvitation\"},{\"name\":\"eventFilms\",\"kind\":\"object\",\"type\":\"EventFilm\",\"relationName\":\"EventToEventFilm\"},{\"name\":\"featureRequests\",\"kind\":\"object\",\"type\":\"FeatureRequest\",\"relationName\":\"EventToFeatureRequest\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Film\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"letterboxdUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"synopsis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"runtimeMinutes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"releaseYear\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"posterImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"director\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventFilms\",\"kind\":\"object\",\"type\":\"EventFilm\",\"relationName\":\"EventFilmToFilm\"},{\"name\":\"featureRequests\",\"kind\":\"object\",\"type\":\"FeatureRequest\",\"relationName\":\"FeatureRequestToFilm\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"EventFilm\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filmId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slotOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToEventFilm\"},{\"name\":\"film\",\"kind\":\"object\",\"type\":\"Film\",\"relationName\":\"EventFilmToFilm\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Invitation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inviteeName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InvitationStatus\"},{\"name\":\"rsvpAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plusOnes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToInvitation\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InvitationToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"FeatureRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"eventId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filmId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"submittedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"submittedEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"submitterName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filmTitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"letterboxdUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"FeatureRequestStatus\"},{\"name\":\"event\",\"kind\":\"object\",\"type\":\"Event\",\"relationName\":\"EventToFeatureRequest\"},{\"name\":\"film\",\"kind\":\"object\",\"type\":\"Film\",\"relationName\":\"FeatureRequestToFilm\"},{\"name\":\"submittedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FeatureRequestSubmittedBy\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

